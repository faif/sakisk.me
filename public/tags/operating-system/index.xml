<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Operating System on Sakis Kasampalis - Personal homepage</title>
    <link>https://sakisk.me/tags/operating-system/</link>
    <description>Recent content in Operating System on Sakis Kasampalis - Personal homepage</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 29 Jan 2012 20:00:00 +0000</lastBuildDate>
    <atom:link href="https://sakisk.me/tags/operating-system/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>9series: Introduction and chmod</title>
      <link>https://sakisk.me/blog/2012-01-29-9series-introduction-and-chmod/</link>
      <pubDate>Sun, 29 Jan 2012 20:00:00 +0000</pubDate>
      <guid>https://sakisk.me/blog/2012-01-29-9series-introduction-and-chmod/</guid>
      <description>&lt;div dir=&#34;ltr&#34; style=&#34;text-align: left;&#34; trbidi=&#34;on&#34;&gt;&lt;h3 class=&#34;documentDescription&#34; style=&#34;text-align: left;&#34;&gt;                            &lt;span class=&#34; kssattr-atfieldname-description kssattr-templateId-widgets/textarea kssattr-macro-textarea-field-view inlineEditable&#34; id=&#34;parent-fieldname-description&#34;&gt;            Introduction to Plan 9 and writing a simple chmod utility&amp;nbsp;&lt;/span&gt;&lt;span class=&#34; kssattr-atfieldname-description kssattr-templateId-widgets/textarea kssattr-macro-textarea-field-view inlineEditable&#34; id=&#34;parent-fieldname-description&#34;&gt; &lt;/span&gt;&lt;/h3&gt;I decided to write down some notes about my experiences while playing with &lt;a class=&#34;external-link&#34; href=&#34;http://plan9.bell-labs.com/plan9/&#34;&gt;Plan 9&lt;/a&gt;.  Plan 9 is a free software (OSI certified) distributed operating system  developed in a place that I would like to visit someday: Bell Labs.  Many great programmers have contributed to Plan 9. Among them are the  well-known from the UNIX world Ken Thompson and Rob Pike. Yet another  respected programming figure, Brian Kernighan, claims to be just a &lt;a class=&#34;external-link&#34; href=&#34;http://doc.cat-v.org/plan_9/2nd_edition/README&#34;&gt;casual user&lt;/a&gt; of the system (or at least he did in 1995).&lt;br /&gt;&lt;br /&gt;There are many novel ideas behind Plan 9. Some of them have already been reimplemented in other operating systems: The &lt;code&gt;/proc&lt;/code&gt; and other in memory pseudo file systems, private group per user, native  UTF-8 support, append-only file permissions, and treating FTP  directories as local. But there are some Plan 9 features that are simply  impossible to implement in the rest systems; or if they are implemented  it is done in a very ugly/hacky way, because their design is not  flexible enough. To mention a few: Namespaces, no need for  root/superuser or &lt;code&gt;sudo&lt;/code&gt;-like hacks, every compilation is by default a cross compilation, device files are controlled using clear-text.&lt;br /&gt;&lt;br /&gt;&lt;h3 style=&#34;text-align: left;&#34;&gt;      Coding in Plan 9&lt;/h3&gt;Although Plan 9 provides an ANSI/POSIX compatibility layer (APE), it  doesn&#39;t make sense to use it for other than porting purposes.The native C  API of Plan 9 is neither POSIX nor ANSI compatible, but IMHO it&#39;s  cleaner and simpler to use. As an example, let&#39;s look into the  implementation of a simplified &lt;code&gt;chmod&lt;/code&gt; utility.&lt;br /&gt;&lt;script src=&#34;https://gist.github.com/1699511.js?file=mychmod.c&#34;&gt;&lt;/script&gt;&lt;br /&gt;A few comments about the interesting parts of the code. Plan 9 has  simple built-in support for handling command line arguments using the &lt;code&gt;ARGBEGIN/ARGEND&lt;/code&gt; block. &lt;code&gt;argv0&lt;/code&gt; is a convenient name that can be used for referring to the name of the  executable. Applying a new permission mask to a file in Plan 9 is just a  matter of updating the mode flag of the file&#39;s &lt;code&gt;Dir&lt;/code&gt; structure. The result is a nice utility using only a few lines of code. Here&#39;s how it can be used:&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;a href=&#34;http://3.bp.blogspot.com/-JqcOHepwI9U/T7_j5P0hrjI/AAAAAAAAAAg/bacxP26KyXk/s1600/9chmod.png&#34; imageanchor=&#34;1&#34; style=&#34;margin-left: 1em; margin-right: 1em;&#34;&gt;&lt;img border=&#34;0&#34; height=&#34;97&#34; src=&#34;http://3.bp.blogspot.com/-JqcOHepwI9U/T7_j5P0hrjI/AAAAAAAAAAg/bacxP26KyXk/s400/9chmod.png&#34; width=&#34;400&#34; /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;And that concludes this brief introduction to Plan 9. Until next time... Happy Coding!&lt;br /&gt;&lt;br /&gt;&lt;h3 style=&#34;text-align: left;&#34;&gt;      References&lt;/h3&gt;&lt;ul&gt;&lt;li&gt;&lt;i&gt;Rob Pike, Dave Presotto, et al. &lt;/i&gt;&lt;a class=&#34;external-link&#34; href=&#34;http://plan9.bell-labs.com/sys/doc/9.html&#34;&gt;Plan 9 From Bell Labs&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;&lt;i&gt;Francisco J Ballesteros.&lt;/i&gt; &lt;a class=&#34;external-link&#34; href=&#34;http://lsub.org/who/nemo/9.intro.pdf&#34;&gt;Introduction to Operating System Abstractions using Plan 9 from Bell Labs&lt;/a&gt;.&lt;/li&gt;&lt;/ul&gt;&lt;div class=&#34;documentDescription&#34;&gt;&lt;/div&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Debian Lenny -&gt; Squeeze transition</title>
      <link>https://sakisk.me/blog/2011-07-31-debian-lenny-squeeze-transition/</link>
      <pubDate>Sun, 31 Jul 2011 00:30:00 +0000</pubDate>
      <guid>https://sakisk.me/blog/2011-07-31-debian-lenny-squeeze-transition/</guid>
      <description>&lt;div dir=&#34;ltr&#34; style=&#34;text-align: left;&#34; trbidi=&#34;on&#34;&gt;After more than a year of using Debian GNU/Linux stable (Lenny) on my eee, I decided to upgrade it to testing (Squeeze). The reasons are  many. Some of them, are the access to updated versions of many  applications, and the usage of a recent optimized kernel. Anyway, my  system is fine except from a (pretty annoying) bug with gnome-panel when minimizing applications (they are gone instead of iconified), which  seems to be a known issue but I still have not found a good solution&lt;sup&gt;[1]&lt;/sup&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;callout&#34; style=&#34;background-color: white; color: black;&#34;&gt;[1] The problem was solved by simply reinstalling GNOME :)&lt;/div&gt;&lt;div class=&#34;callout&#34;&gt;&lt;br /&gt;&lt;/div&gt;If you are planning to do the same, the following advices might be helpful:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Make sure that you have enough space on all partitions. In my  case, during the installation my root partition became full, which  terminated the process. An easy way to free space on the root partition  (I&#39;m talking about using a separate root partition here) is to remove  outdated kernels and modules (if you don&#39;t use a separate boot  partition). Don&#39;t do this manually, use &lt;code&gt;aptitude search linux-image&lt;/code&gt; and &lt;code&gt;aptitude purge&lt;/code&gt; instead. Other than that, &lt;code&gt;du --human-readable --summarize [directories/files] | sort --reverse --numeric-sort&lt;/code&gt; will be your friend :)&lt;/li&gt;&lt;li&gt;Be aware of the udev &lt;a class=&#34;external-link&#34; href=&#34;http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=571255&#34;&gt;bug&lt;/a&gt;. There is a lot of discussion on the Web, but the best solution I&#39;ve found is on the Debian &lt;a class=&#34;external-link&#34; href=&#34;http://forums.debian.net/viewtopic.php?f=16&amp;amp;t=48996&#34;&gt;forum&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;Use &lt;code&gt;aptitude&lt;/code&gt; instead of &lt;code&gt;apt-get&lt;/code&gt;. The steps are very straightforward:&lt;/li&gt;&lt;ul&gt;&lt;li&gt;Replace all the lines in &lt;code&gt;/etc/apt/sources.list&lt;/code&gt; from  lenny to squeeze (or stable to testing, etc.) except from the security  repository. The reason is that security updates are provided faster for  the stable distribution, and it is fine to keep this line as is (no  conflicts).&lt;/li&gt;&lt;li&gt;&lt;code&gt;sudo aptitude update&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;sudo aptitude install apt dpkg aptitude&lt;/code&gt;&lt;/li&gt;&lt;li&gt;&lt;code&gt;sudo aptitude safe-upgrade&lt;/code&gt;. Warning: This can last for some hours so get a book or go out for a coffee...&lt;/li&gt;&lt;li&gt;Reboot to make sure that the new kernel is used.&lt;/li&gt;&lt;li&gt;&lt;code&gt;sudo aptitude full-upgrade&lt;/code&gt;. Although not necessary, I advice you to switch into single user mode with &lt;code&gt;sudo telinit 1&lt;/code&gt; before executing this step. &lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;br /&gt;Have fun with Debian!&lt;/div&gt;</description>
    </item>
    <item>
      <title>TheHackerspace</title>
      <link>https://sakisk.me/blog/2011-06-01-thehackerspace/</link>
      <pubDate>Wed, 01 Jun 2011 16:30:00 +0000</pubDate>
      <guid>https://sakisk.me/blog/2011-06-01-thehackerspace/</guid>
      <description>&lt;div dir=&#34;ltr&#34; style=&#34;text-align: left;&#34; trbidi=&#34;on&#34;&gt;&lt;h4 class=&#34;documentDescription&#34; style=&#34;text-align: left;&#34;&gt;                       &lt;span class=&#34; kssattr-atfieldname-description kssattr-templateId-widgets/textarea kssattr-macro-textarea-field-view inlineEditable&#34; id=&#34;parent-fieldname-description&#34;&gt;            Thesssaloniki&#39;s hackerspace is here!&lt;/span&gt;&lt;/h4&gt;&lt;div class=&#34;documentDescription&#34;&gt;&lt;span class=&#34; kssattr-atfieldname-description kssattr-templateId-widgets/textarea kssattr-macro-textarea-field-view inlineEditable&#34; id=&#34;parent-fieldname-description&#34;&gt;&lt;/span&gt; The following excerpt is taken from the &lt;a class=&#34;external-link&#34; href=&#34;http://the-hackerspace.blogspot.com/&#34;&gt;homepage&lt;/a&gt; of TheHackerspace: &lt;/div&gt;&lt;blockquote class=&#34;tr_bq&#34;&gt;&lt;div class=&#34;callout&#34; style=&#34;text-align: justify;&#34;&gt;&#34;Unless you are rich, it is unlikely that you own all the hardware and the tools required to build different kinds of embedded systems. For example you might already own an arduino board, but most probably you are missing the X or Y sensor required to build your favourite prototype.&lt;/div&gt;&lt;div class=&#34;callout&#34; style=&#34;text-align: justify;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;callout&#34; style=&#34;text-align: justify;&#34;&gt;And unless you are a genius, it is unlikely that you know everything about all the available free software/open source operating systems. Thus, perhaps you wrote your own system call or driver for the Linux kernel, but most probably you don’t know how to do the same stuff on another operating system that you like (for example MINIX 3).&lt;/div&gt;&lt;div class=&#34;callout&#34; style=&#34;text-align: justify;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class=&#34;callout&#34; style=&#34;text-align: justify;&#34;&gt;Don’t worry. That is exactly why we founded TheHackerspace. It is a place where hardware, books, code, and knowledge is shared between people who like to hack. If you are interested on embedded and system hacking, you are welcomed to join us.&#34;&lt;/div&gt;&lt;/blockquote&gt;&lt;div style=&#34;text-align: justify;&#34;&gt;Personally I contributed in many ways to  the foundation of TheHackerspace by helping to build the lab, donating books, writing most of the (current) content  in the homepage, etc. Unfortunately I don&#39;t have the time to enjoy  TheHackerspace since in a week I&#39;m relocating to the Netherlands where I  got a job (but that&#39;s good news!). I hope that when I&#39;m back in  Thessaloniki TheHackerspace will still exist and some really great  projects will be the outcomes of its foundation :)&lt;/div&gt;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
