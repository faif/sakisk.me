<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Conference on Sakis Kasampalis - Personal homepage</title>
    <link>http://localhost:1313/tags/conference/</link>
    <description>Recent content in Conference on Sakis Kasampalis - Personal homepage</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Jul 2016 20:10:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/conference/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>And the second conference of the year was... NextBuild</title>
      <link>http://localhost:1313/blog/2016-07-03-and-second-conference-of-year-was-nextbuild/</link>
      <pubDate>Sun, 03 Jul 2016 20:10:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2016-07-03-and-second-conference-of-year-was-nextbuild/</guid>
      <description>&lt;p&gt;It&amp;rsquo;s sad that there are no good programming conferences in the South of the Netherlands and especially around the Eindhoven&#xA;area which is considered very innovative and has a strong university. Fortunately, &lt;a href=&#34;http://nextbuild.nl&#34;&gt;NextBuild&lt;/a&gt; is an exception.&lt;/p&gt;&#xA;&lt;p&gt;2016 was the second year of the NextBuild conference. I missed the first one so I can&amp;rsquo;t comment about it, but I can say a few&#xA;things about the 2016 version. First of all it&amp;rsquo;s important to stress that this is a free (gratis) one day conference, which is&#xA;not the usual case when it comes to conferences (&lt;a href=&#34;%7B%7Bsite.url%7D%7D/2016/05/21/and-first-conference-of-year-was-dutch.html&#34;&gt;Dutch Clojure Days&lt;/a&gt; was another good exception). And even though NextBuild is free,&#xA;we were offered free coffee, juice, cookies, sandwiches, and beers. Not bad&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>And the first conference of the year was... Dutch Clojure Days</title>
      <link>http://localhost:1313/blog/2016-05-21-and-first-conference-of-year-was-dutch/</link>
      <pubDate>Sat, 21 May 2016 22:46:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2016-05-21-and-first-conference-of-year-was-dutch/</guid>
      <description>&lt;div dir=&#34;ltr&#34; style=&#34;text-align: left;&#34; trbidi=&#34;on&#34;&gt;&lt;a href=&#34;http://clojure.org/&#34;&gt;Clojure&lt;/a&gt; is a very interesting programming language. If you haven&#39;t checked it yet, go ahead. Apart from being a pragmatic Lisp that offers easy Java interop, it also has a nice community. So far I haven&#39;t spent as much time on the language as I would like, but I&#39;m planning to do that.&lt;br /&gt;&lt;br /&gt;I was planning to write a few comments about each talk of the first (ever) &lt;a href=&#34;http://clojuredays.org/&#34;&gt;Dutch Clojure Days&lt;/a&gt; event, but I just noticed that the whole conference is now available &lt;a href=&#34;https://www.youtube.com/playlist?list=PLjzcwcP9P2LeiVXofnnXcxAqvmVNn3fTD&#34;&gt;online&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;If you don&#39;t want to watch every keynote, there&#39;s one that intrigued me: &lt;a href=&#34;https://www.youtube.com/watch?v=at6Q8sNx95A&amp;amp;list=PLjzcwcP9P2LeiVXofnnXcxAqvmVNn3fTD&amp;amp;index=3&#34;&gt;Conversational Computing:  How Okasaki made McCarthy right yet again&lt;/a&gt;. I liked the way Michiel is trying to connect the dots.&lt;br /&gt;&lt;br /&gt;And if you liked my recommendation and want a second one, try &lt;span class=&#34;watch-title&#34; dir=&#34;ltr&#34; id=&#34;eow-title&#34; title=&#34;Clojure for Data Science  the good, the bad, and the ugly by Simon Belak&#34;&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=uZ_3phggAJ8&amp;amp;index=4&amp;amp;list=PLjzcwcP9P2LeiVXofnnXcxAqvmVNn3fTD&#34;&gt;Clojure for Data Science:  the good, the bad, and the ugly&lt;/a&gt;. Simon covers many nice concepts of functional programming, without being afraid to criticize the ugly parts and express his ideas on how things can be improved.&lt;/span&gt;&lt;br /&gt;&lt;span class=&#34;watch-title&#34; dir=&#34;ltr&#34; id=&#34;eow-title&#34; title=&#34;Clojure for Data Science  the good, the bad, and the ugly by Simon Belak&#34;&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class=&#34;watch-title&#34; dir=&#34;ltr&#34; id=&#34;eow-title&#34; title=&#34;Clojure for Data Science  the good, the bad, and the ugly by Simon Belak&#34;&gt;I&#39;m very glad that I attended this conference. It was free (gratis) but thanks to the kind sponsors we had everything (coffee, muffins, and sandwiches). The venue was nice, and the location great (well, I love Amsterdam anyway). So yeah, nice work guys and until next year happy Lisping in Clojure ;)&lt;/span&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Joy Of Coding 2015 Review</title>
      <link>http://localhost:1313/blog/2015-11-20-joy-of-coding-2015-review/</link>
      <pubDate>Fri, 20 Nov 2015 19:42:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2015-11-20-joy-of-coding-2015-review/</guid>
      <description>&lt;div dir=&#34;ltr&#34; style=&#34;text-align: left;&#34; trbidi=&#34;on&#34;&gt;Like &lt;a href=&#34;http://sakiskasampalis.blogspot.nl/2014/03/joy-of-coding-2014-my-impressions.html&#34;&gt;last year&lt;/a&gt;, Joy of Coding 2015 was a great conference. This year the conference took place during May, for once again in Rotterdam. The organisation was similar to that of last year: A few common talks, but also parallel talks and workshops.&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The conference this year started with a keynote by Chris Granger (@ibdknox): &#34;Programming as distributed cognition: Defining a super power&#34;. I missed the beginning of the keynote but AFAIU Chris wanted to stress the importance of using programming as an exploration tool. In that sense, we should create programming tools that make it easier for scientists to model problems and experiment quickly. His tools&amp;nbsp;&lt;a href=&#34;http://lighttable.com/&#34;&gt;Light Table&lt;/a&gt;&amp;nbsp;and Eve focus on those aspects.&lt;/div&gt;&lt;div&gt;&lt;div style=&#34;text-align: left;&#34;&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;Next, I watched the presentation &#34;Joy of testing&#34; by John Hughes. The quote of this presentation was &#34;Do not write tests, generate them!&#34;. Indeed, using the Erlang version of QuickCheck, John showed a live demo of discovering and fixing bugs using generated tests. John also explained his personal experiences of using the same tools to discover and fix bugs that existed in concurrent Erlang production code (AFAIR the code was used in the automotive industry).&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The next speaker was Laurent Bossavit (@Morendil). This keynote was more over psychology than technology. But it seems that there&#39;s a deep connection between the two. Laurent suffered by depression and according to him depression is a feature and not a bug. It is very important to be able to debug ourselves, and not just programs. We should stay away from things that make as sad and focus on the things that make us happy. As an example, you might be able to find a COBOL job that pays well, but does COBOL really make you happy? Maybe a job with a lower salary but more fun (think of python, arduino, etc.) is better for you.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The next keynote was about &#34;Mutation testing&#34; by Roy van Rijn. Roy believes that mutation testing, a technique for measuring the quality of unit tests, is better than code coverage. There&#39;s an actual Java tool that can be used to explore this area: &lt;a href=&#34;http://mutationtesting.org/&#34;&gt;Judy&lt;/a&gt;. A mutant is a version of a program with a modified operator. For example replacing logical AND with logical OR. Killing a mutant means that the incorrect behaviour of the modified code is detected properly and reported, and that&#39;s what basically Judy does. I&#39;ve never tried mutation testing. Maybe one day I will...&lt;br /&gt;&lt;br /&gt;I enjoyed the next talk by Crista Lopes (@cristalopes) a lot. Crista is the author of a really nice programming book that anyone who is involved with programming should read:&amp;nbsp;&lt;a href=&#34;http://www.amazon.com/Exercises-Programming-Style-Cristina-Videira/dp/1482227371/&#34;&gt;Exercises in Programming Style&lt;/a&gt;. The book uses a simple concept: Implement the same program using the &amp;nbsp;same language (Python) in 33 different styles! A style is basically a form of a programming paradigm (think of object-oriented, functional, procedural, etc.). During the talk Crista demonstrated a subset of the 33 styles of her book. The purpose of Crista&#39;s talk (and AFAIU that&#39;s also the focus point of the book) was not to compare the different styles and take sides, but to stress the importance of recognising and understanding the different styles. I can&#39;t agree more. There&#39;s no best programming style for all purposes, and we should be able to work with all of them. BTW there&#39;s a GitHub &lt;a href=&#34;https://github.com/crista/exercises-in-programming-style&#34;&gt;repository&lt;/a&gt; with the styles.&lt;br /&gt;&lt;br /&gt;The workshop that I picked for Joy of Coding 2015 was about &#34;Property based testing&#34;, by Marc Evers, Rob Westgeest, and Willem van den Ende. Property based testing is about the automatic generation of unit tests for a system by describing its properties. The benefit of using property based testing instead of unit testing is that it (a) takes less time since the tests are generated, (b) is more reliable than manual writing since humans tend to forget to cover all possible cases.&lt;br /&gt;During the workshop we used Javascript (NodeJs and JSVerify) and went through several examples.&lt;br /&gt;&lt;br /&gt;The closing keynote couldn&#39;t be better. A mix of jokes and programming advices by Kevlin Henney (@KevlinHenney), by checking nice (and not so nice) pieces of code written by various programmers in different languages. Studying code written by others is something that is important and we all need to do.&lt;br /&gt;&lt;br /&gt;Yet another good year for Joy of Coding. I hope that it will continue to use the same successful recipe in the years to come... :)&lt;/div&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Joy of Coding 2014 - My impressions</title>
      <link>http://localhost:1313/blog/2014-03-08-joy-of-coding-2014-my-impressions/</link>
      <pubDate>Sat, 08 Mar 2014 15:49:00 +0000</pubDate>
      <guid>http://localhost:1313/blog/2014-03-08-joy-of-coding-2014-my-impressions/</guid>
      <description>&lt;div dir=&#34;ltr&#34; style=&#34;text-align: left;&#34; trbidi=&#34;on&#34;&gt;I haven&#39;t been to a conference for years, but this year I decided to join &lt;a href=&#34;http://joyofcoding.org/&#34;&gt;Joy of Coding&lt;/a&gt;. And I don&#39;t regret it!&lt;br /&gt;&lt;br /&gt;The conference started with a keynote by Dan North: &#34;Accelerating Agile: hyper-performing       without the hype&#34;. Dan described what he learnt about Agile while working in the trading domain. The most interesting advice that I kept from his presentation is that being a good programmer is not enough: What really makes a difference is to become a domain expert. For example, if you are working as a stock market programmer, your superior programming skills don&#39;t matter if you have no clue about what the numbers mean.&lt;br /&gt;&lt;br /&gt;Next, I joined the &#34;Let Me Graph That For You: An Introduction to Neo4j&#34; workshop, by Ian Robinson. The first part of the workshop was an introduction to Graph Databases and Neo4j. At the second part we used Neo4j and its query language Cypher to create a few graphs and query them. I am impressed by how easy is to get started with Neo4j. I find its web interface very intuitive. We had a few questions for Ian (S = Sakis, I = Ian, O = Other conference participant):&lt;br /&gt;&lt;ul style=&#34;text-align: left;&#34;&gt;&lt;li&gt;S: Is there any relation between Neo4j and RDF?&lt;/li&gt;&lt;li&gt;I: Not really. In RDF you typically end up with more connections because everything is modelled as a triple. But there are libraries that can extract a Neo4j graph as RDF.&lt;/li&gt;&lt;li&gt;S: Are all the common graph algorithms (eg. SPF, BFS, Bellman-Ford, etc.) available?&lt;/li&gt;&lt;li&gt;I: Most of the well-known graph algorithms are available, and furthermore there is a Java API that is exposed and can be extended with your own algorithms.&lt;/li&gt;&lt;li&gt;S: Is Cypher case-sensitive?&lt;/li&gt;&lt;li&gt;I: Partly. The identifiers of a query are case-sensitive, but the rest parts of the query aren&#39;t.&lt;/li&gt;&lt;li&gt;O: Are there any cases where RDBMS should still be used instead of Graph Databases?&lt;/li&gt;&lt;li&gt;I: If you have tabular data and you want to focus on set theory operations (eg. union, intersection, etc.) an RDBMS is preferable.&lt;/li&gt;&lt;/ul&gt;&amp;nbsp;I&#39;ll definitely look more into Graph Databases and Neo4j.&lt;br /&gt;&lt;br /&gt;The next keynote was &#34;Contravariance is the Dual of Covariance&#34;, by Erik Meijer. I&#39;m not very familiar with Reactive Programming and Rx, thus I couldn&#39;t follow everything. But at least I enjoyed the jokes and the funny examples that Erik used. Using Scala as a reference, he explained the meanings of covariance and contra-variance, and showed how they can be used to create reusable code.&lt;br /&gt;&lt;div&gt;&lt;br /&gt;The second workshop that I joined was &#34;An Introduction to Actors and Concurrency&#34;, by Michel Rijnders and Matthijs Ooms. The first part of the workshop was basically an introduction to Erlang, thus nothing special if you are familiar with Prolog. The fun started at the second part, where we experienced how straightforward is to communicate asynchronously through the network using Erlang&#39;s actor model and message-passing primitives.&lt;br /&gt;&lt;br /&gt;Last but not least was the keynote &#34;The Tao, of the Joy, of Coding&#34;, by Dick Wall. This was by far the most inspiring keynote. Dick, using ancient Chinese philosophy as a reference, talked about many interesting topics, including programming honesty (saying &#34;I don&#39;t understand this&#34; and learning from your colleagues is a good thing), looking back as a programmer (eg. if you used your programming skills to find a cure for a disease you really changed the world), and getting a life (being proud about working until 2 AM is a very bad mentality).&lt;br /&gt;&lt;br /&gt;All in all, a great conference that I will keep in my agenda every year!&lt;/div&gt;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
