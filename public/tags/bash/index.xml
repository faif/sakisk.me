<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bash on Sakis Kasampalis - Personal homepage</title>
    <link>https://sakisk.me/tags/bash/</link>
    <description>Recent content in Bash on Sakis Kasampalis - Personal homepage</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Apr 2019 13:00:00 +0000</lastBuildDate>
    <atom:link href="https://sakisk.me/tags/bash/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Everyday command line: Quoting, splitting, and removing newlines</title>
      <link>https://sakisk.me/blog/2019-04-10-everyday/</link>
      <pubDate>Wed, 10 Apr 2019 13:00:00 +0000</pubDate>
      <guid>https://sakisk.me/blog/2019-04-10-everyday/</guid>
      <description>&lt;p&gt;Welcome to the new (infinite) series &amp;ldquo;Everyday command line&amp;rdquo;, in which I&amp;rsquo;ll cover use cases where the command line still shines compared to your favorite file manager, IDE, editor, and the like :)&lt;/p&gt;&#xA;&lt;p&gt;At times, I receive emails with lists of items that need to be modified using code. Let&amp;rsquo;s assume that a colleague sends us a list of 200 object IDs. I&amp;rsquo;ll include only 5 here for brevity:&lt;/p&gt;&#xA;&lt;p&gt;| 29045  |&#xA;| 14874  |&#xA;| 33457  |&#xA;| 21094  |&#xA;| 36842  |&#xA;| &amp;hellip;    |&lt;/p&gt;</description>
    </item>
    <item>
      <title>Type less, do more...</title>
      <link>https://sakisk.me/blog/2018-02-10-keystrokes/</link>
      <pubDate>Sat, 10 Feb 2018 17:00:00 +0000</pubDate>
      <guid>https://sakisk.me/blog/2018-02-10-keystrokes/</guid>
      <description>&lt;p&gt;If you are dealing a lot with the terminal you probably use the &lt;code&gt;cd&lt;/code&gt; command very often. &lt;code&gt;cd here&lt;/code&gt;, &lt;code&gt;cd there&lt;/code&gt;, &lt;code&gt;cd ..&lt;/code&gt;, etc. What if I told you that you can avoid typing the &lt;code&gt;cd&lt;/code&gt; command completely? That can save you a lot of keystrokes which is good because it:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Makes you more productive&lt;/li&gt;&#xA;&lt;li&gt;Helps you avoid &lt;abbr title=&#34;Repetitive Strain Injury&#34;&gt;RSI&lt;/abbr&gt; problems, such as the infamous &lt;abbr title=&#34;Carpal Tunnel Syndrome&#34;&gt;CTS&lt;/abbr&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;The first tool that I want to show you is &lt;a href=&#34;https://github.com/wting/autojump&#34;&gt;autojump&lt;/a&gt;. Once installed, autojump (abbreviated by the command &lt;code&gt;j&lt;/code&gt;) maintains its own database to help you navigate to a directory without the need to remember:&lt;/p&gt;</description>
    </item>
    <item>
      <title>BASH: syntax error near unexpected token `(&#39;</title>
      <link>https://sakisk.me/blog/2014-04-19-bash-syntax-error-near-unexpected-token/</link>
      <pubDate>Sat, 19 Apr 2014 16:13:00 +0000</pubDate>
      <guid>https://sakisk.me/blog/2014-04-19-bash-syntax-error-near-unexpected-token/</guid>
      <description>&lt;div dir=&#34;ltr&#34; style=&#34;text-align: left;&#34; trbidi=&#34;on&#34;&gt;After making some portability and readability improvements to &lt;a href=&#34;https://github.com/faif/shell-utils&#34;&gt;&lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;shell-utils&lt;/span&gt;&lt;/a&gt;, I used BASH, sh, and dash to test it. While sh and dash were fine, BASH returned the error:&lt;br /&gt;&lt;br /&gt;&lt;b&gt;line 358: syntax error near unexpected token `(&#39;&lt;/b&gt;&lt;br /&gt;&lt;b&gt;line 358: `ls ()&#39;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;That is strange. BASH usually introduces shell portability issues because of the extra features it provides, so I would expect to have a problem with the other shells.&lt;br /&gt;&lt;br /&gt;It turns out that BASH did a pretty good job with reporting the source of the error. Note that &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;shell-utils&lt;/span&gt; redefines a few everyday commands as functions, to make them more verbose and &lt;strike&gt;secure&lt;/strike&gt; safe (eg. &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;ls&lt;/span&gt; becomes &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;ls --color=auto&lt;/span&gt;, &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;rm&lt;/span&gt; becomes &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;rm -i&lt;/span&gt;, etc.). But usually those everyday commands are already defined as aliases in .bashrc. Aliases are evaluated before functions, and defining a function that has the same name as an alias is not allowed. And that&#39;s what BASH is trying to tell me in the error message. Commenting all aliases in .bashrc fixed the issue :)&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>Why you should try Emacs if you are a Bash user</title>
      <link>https://sakisk.me/blog/2013-03-23-why-you-should-try-emacs-if-you-are/</link>
      <pubDate>Sat, 23 Mar 2013 19:40:00 +0000</pubDate>
      <guid>https://sakisk.me/blog/2013-03-23-why-you-should-try-emacs-if-you-are/</guid>
      <description>&lt;div dir=&#34;ltr&#34; style=&#34;text-align: left;&#34; trbidi=&#34;on&#34;&gt;Are you a GNU Bash user but you are not using Emacs? Perhaps you should consider trying it. You will be amazed by the similarities...&lt;br /&gt;&lt;br /&gt;I know, your IDE (Eclipse, QT, etc.) is superior and you are extremely productive with it. Why bother using an ancient editor like Emacs? I will not begin another flamewar by comparing popular IDEs with Emacs. Choose whatever you prefer during programming. But if you want to be productive while using a UNIX-like system, Emacs (and of course Vim but I can&#39;t speak for Vim since I&#39;m an Emacs user) can really help you.&lt;br /&gt;&lt;br /&gt;The truth is that if you are already productive in Bash (mandatory reading: &lt;a href=&#34;http://www.skorks.com/2009/09/bash-shortcuts-for-maximum-productivity/&#34;&gt;Bash Shortcuts For Maximum Productivity&lt;/a&gt;) you are familiar with Emacs but you don&#39;t know it yet :) The default key bindings of Bash are also used by Emacs. Let me show you some examples (my apologies to screencast haters but that&#39;s the best way of demonstrating keyboard typing):&lt;br /&gt;&lt;br /&gt;&lt;div class=&#34;separator&#34; style=&#34;clear: both; text-align: center;&#34;&gt;&lt;object class=&#34;BLOGGER-youtube-video&#34; classid=&#34;clsid:D27CDB6E-AE6D-11cf-96B8-444553540000&#34; codebase=&#34;http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0&#34; data-thumbnail-src=&#34;https://ytimg.googleusercontent.com/vi/SPSoT22fwzM/0.jpg&#34; height=&#34;266&#34; width=&#34;320&#34;&gt;&lt;param name=&#34;movie&#34; value=&#34;https://www.youtube.com/v/SPSoT22fwzM?version=3&amp;f=user_uploads&amp;c=google-webdrive-0&amp;app=youtube_gdata&#34; /&gt;&lt;param name=&#34;bgcolor&#34; value=&#34;#FFFFFF&#34; /&gt;&lt;param name=&#34;allowFullScreen&#34; value=&#34;true&#34; /&gt;&lt;embed width=&#34;320&#34; height=&#34;266&#34;  src=&#34;https://www.youtube.com/v/SPSoT22fwzM?version=3&amp;f=user_uploads&amp;c=google-webdrive-0&amp;app=youtube_gdata&#34; type=&#34;application/x-shockwave-flash&#34; allowfullscreen=&#34;true&#34;&gt;&lt;/embed&gt;&lt;/object&gt;&lt;/div&gt;&lt;br /&gt;So, what does this screencast demonstrate? My goal is to use the &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;find&lt;/span&gt; command for searching all files with the suffix &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;.conf&lt;/span&gt; that live under the &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;/etc&lt;/span&gt; directory. First fix: I mistyped &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;.cofn&lt;/span&gt; instead of &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;.conf&lt;/span&gt; and used the transpose character function &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;(C-t)&lt;/span&gt;* to correct the mistake. Second fix: I forgot that &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;find&lt;/span&gt; expects the searching path as its first argument and incorrectly provided it as the second. To fix that I first used &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;C-p&lt;/span&gt; to access the most recent command in the command history (this functionality is not offered by Emacs as such). I then used the kill function &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;(C-w)&lt;/span&gt; to &#34;cut&#34; backwards one word, &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;C-a&lt;/span&gt; to go to the beginning of the line, &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;M-f&lt;/span&gt; to go one word forward, and the yank function &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;(C-y)&lt;/span&gt; to &#34;paste&#34; the most recently killed word (that is, the search path) at the expected place.&lt;br /&gt;&lt;br /&gt;The moral of the story: When you learn about a new shortcut in Emacs, try it also in Bash. There&#39;s a great chance that its behavior will be very similar (if not exactly the same).&lt;br /&gt;&lt;br /&gt;&lt;span style=&#34;font-size: x-small;&#34;&gt;* In case you are not familiar with the Emacs terminology: &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;C&lt;/span&gt; typically means the Ctrl keyboard button, and &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;M&lt;/span&gt; means the Alt keyboard button. As an example&lt;span style=&#34;font-size: x-small;&#34;&gt; &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;M-f&lt;/span&gt; means&lt;/span&gt; pressing first Alt followed by &lt;span style=&#34;font-family: &amp;quot;Courier New&amp;quot;,Courier,monospace;&#34;&gt;f&lt;/span&gt; (move the prompt one word forward).&lt;/span&gt;&lt;/div&gt;</description>
    </item>
  </channel>
</rss>
